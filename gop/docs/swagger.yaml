basePath: /
definitions:
  model.Option:
    properties:
      desc:
        type: object
      id:
        type: object
    type: object
  request.DeleteItemReq:
    properties:
      ids:
        items:
          type: integer
        type: array
      table:
        type: string
    required:
    - ids
    - table
    type: object
  request.IDReq:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  request.LoginReq:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.RegisterReq:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.StatusReq:
    properties:
      ids:
        items:
          type: integer
        type: array
      language:
        type: string
      status:
        type: integer
      table:
        type: string
    required:
    - ids
    - language
    - status
    - table
    type: object
  request.UpdateInfoReq:
    properties:
      avatar:
        type: string
      introduction:
        type: string
      name:
        type: string
    required:
    - avatar
    - introduction
    - name
    type: object
  request.UpdatePasswordReq:
    properties:
      newPwd:
        type: string
      oldPwd:
        type: string
    required:
    - newPwd
    - oldPwd
    type: object
  request.UpdateRoleReq:
    properties:
      id:
        type: integer
      role:
        type: string
    required:
    - id
    - role
    type: object
  request.UpdateTextReq:
    properties:
      id:
        type: integer
      language:
        type: string
      table:
        type: string
      text:
        type: string
    required:
    - id
    - language
    - table
    - text
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
info:
  contact: {}
  description: roro.ishere
  title: Swagger Example API
  version: 0.0.1
paths:
  /v1/item:
    delete:
      consumes:
      - application/json
      parameters:
      - description: DeleteItemReq
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.DeleteItemReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除条目
      tags:
      - Item
  /v1/item/export:
    get:
      parameters:
      - description: table
        in: query
        name: table
        required: true
        type: string
      - description: language
        in: query
        name: language
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 导出
      tags:
      - Item
  /v1/item/import:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      - description: table
        in: formData
        name: table
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 导入数据
      tags:
      - Item
  /v1/item/list:
    get:
      parameters:
      - in: query
        name: keyword
        type: string
      - in: query
        name: language
        required: true
        type: string
      - in: query
        name: limit
        required: true
        type: integer
      - in: query
        name: page
        required: true
        type: integer
      - in: query
        name: sort
        type: integer
      - in: query
        name: status
        type: integer
      - in: query
        name: table
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取条目列表
      tags:
      - Item
  /v1/item/record/text:
    put:
      consumes:
      - application/json
      parameters:
      - description: UpdateTextReq
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateTextReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新条目翻译
      tags:
      - Item
  /v1/item/status:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Option'
            type: array
      summary: 获取状态选项
      tags:
      - Item
    put:
      consumes:
      - application/json
      parameters:
      - description: StatusReq
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.StatusReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新条目状态
      tags:
      - Item
  /v1/item/text:
    put:
      consumes:
      - application/json
      parameters:
      - description: UpdateTextReq
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateTextReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新条目
      tags:
      - Item
  /v1/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 上传文件
      tags:
      - Upload
  /v1/user:
    delete:
      parameters:
      - description: IDReq
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.IDReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - User
  /v1/user/info:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取信息
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: UpdateInfoReq
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateInfoReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新信息
      tags:
      - User
  /v1/user/list:
    get:
      parameters:
      - in: query
        name: limit
        required: true
        type: integer
      - in: query
        name: page
        required: true
        type: integer
      - in: query
        name: role
        type: string
      - in: query
        name: sort
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 获取用户列表
      tags:
      - User
  /v1/user/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: LoginReq
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: 登录
      tags:
      - User
  /v1/user/password:
    put:
      consumes:
      - application/json
      parameters:
      - description: UpdatePasswordReq
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdatePasswordReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新密码
      tags:
      - User
  /v1/user/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: RegisterReq
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: 注册
      tags:
      - User
  /v1/user/role:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Option'
            type: array
      security:
      - ApiKeyAuth: []
      summary: 获取角色选项
      tags:
      - User
    put:
      consumes:
      - application/json
      parameters:
      - description: UpdateRoleReq
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - ApiKeyAuth: []
      summary: 更新角色
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
